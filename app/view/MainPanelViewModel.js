/*
 * File: app/view/MainPanelViewModel.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DataBindingDemo.view.MainPanelViewModel', {
    extend: 'Ext.app.ViewModel',
    alias: 'viewmodel.mainpanel',

    requires: [
        'Ext.data.Store',
        'Ext.data.ChainedStore',
        'Ext.app.bind.Formula'
    ],

    data: {
        currentPerson: null
    },

    stores: {
        persons: {
            isDirty: function() {
                var b = this.getModifiedRecords().length;
                b = b || this.getNewRecords().length;
                b = b || this.getRemovedRecords().length;
                return !!b;
            },
            model: 'DataBindingDemo.model.Person',
            data: [
                {
                    id: 1,
                    fname: 'John',
                    lname: 'Lennon',
                    age: 74
                },
                {
                    id: 2,
                    fname: 'Paul',
                    lname: 'McCartney',
                    age: 72
                },
                {
                    id: 3,
                    fname: 'George',
                    lname: 'Harrison',
                    age: 71
                },
                {
                    id: 4,
                    fname: 'Ringo',
                    lname: 'Starr',
                    age: 74
                }
            ]
        },
        personsChained: {
            source: '{persons}'
        }
    },
    formulas: {
        dirty: {
            get: function(data) {
                return data ? data.dirty : false;
            },
            bind: {
                bindTo: '{currentPerson}',
                deep: true
            }
        },
        storeDirty: {
            get: function(data) {
                return this.getStore('persons').isDirty();
            },
            bind: {
                bindTo: '{currentPerson}',
                deep: true
            }
        }
    }

});